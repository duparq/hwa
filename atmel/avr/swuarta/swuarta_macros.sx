
	;; -*- asm -*-

	;; Clear flag and enable an interrupt
	;;
	.macro _enable_int r ifra ifbp iera iebp
	XCF	\r, \ifra, \ifbp
	XSB	\r, \iera, \iebp
	.endm

	;; Clear flag and enable an interrupt (atomic)
	;;
	.macro _enable_int_a r1 r2 ifra ifbp iera iebp
	XCF	\r1, \ifra, \ifbp
	XSBA	\r1, \r2, \iera, \iebp
	.endm

	;; Disable an interrupt
	;;
	.macro _disable_int r iera iebp
	XCB	\r, \iera, \iebp
	.endm


	;; Is the compare-match flag set?
	;; 
	;; .macro test_match_if reg
	;; XLD	\reg, MATCH_IF_RA	;
	;; andi	\reg, 1<<MATCH_IF_BP	;
	;; CYCLES=CYCLES+1
	;; .endm


#define enable_start(r)		_enable_int 	r, START_IF, START_IE
#define disable_start(r)	_disable_int	r, START_IE

	;; Enable counter compare-match (triggered to send/receive bit)
	;; 
#define enable_match(r)		_enable_int	r, MATCH_IF, MATCH_IE
#define enable_match_a(r1,r2)	_enable_int_a	r1, r2, MATCH_IF, MATCH_IE


	;; Disable counter compare-match
	;; 
#define disable_match(r)	_disable_int	r, MATCH_IE
//#define disable_match_a(r1,r2)	_disable_int_a	r1, r2, MATCH_IE
