HW_DEVICE=attiny84
hw_syshz=8000000
hw_swuart0_pin_rxd=hw_pin_pb0
hw_swuart0_pin_txd=hw_pin_pb0
hw_swuart0_autosync=sync_5_1
hw_swuart0_compare=hw_oc10
hw_swuart0_clk_div=1
hw_swuart1_pin_rxd=hw_pin_pa5
hw_swuart1_pin_txd=hw_pin_pa5
hw_swuart1_autosync=sync_5_1
hw_swuart1_compare=hw_oc11
hw_swuart1_clk_div=1
PIN_LED=hw_pin_pa6


build/out.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000054e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000054e  000005e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000e  00800060  00800060  000005e2  2**0
                  ALLOC
  3 .stab         00001080  00000000  00000000  000005e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001ee1  00000000  00000000  00001664  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00003545  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	1f c0       	rjmp	.+62     	; 0x42 <__bad_interrupt>
   4:	a0 c0       	rjmp	.+320    	; 0x146 <__vector_2>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__vector_3>
   8:	1c c0       	rjmp	.+56     	; 0x42 <__bad_interrupt>
   a:	1b c0       	rjmp	.+54     	; 0x42 <__bad_interrupt>
   c:	3d c0       	rjmp	.+122    	; 0x88 <__vector_6>
   e:	bd c0       	rjmp	.+378    	; 0x18a <__vector_7>
  10:	18 c0       	rjmp	.+48     	; 0x42 <__bad_interrupt>
  12:	17 c0       	rjmp	.+46     	; 0x42 <__bad_interrupt>
  14:	16 c0       	rjmp	.+44     	; 0x42 <__bad_interrupt>
  16:	15 c0       	rjmp	.+42     	; 0x42 <__bad_interrupt>
  18:	14 c0       	rjmp	.+40     	; 0x42 <__bad_interrupt>
  1a:	13 c0       	rjmp	.+38     	; 0x42 <__bad_interrupt>
  1c:	12 c0       	rjmp	.+36     	; 0x42 <__bad_interrupt>
  1e:	11 c0       	rjmp	.+34     	; 0x42 <__bad_interrupt>
  20:	10 c0       	rjmp	.+32     	; 0x42 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf e5       	ldi	r28, 0x5F	; 95
  28:	d2 e0       	ldi	r29, 0x02	; 2
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_clear_bss>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	01 c0       	rjmp	.+2      	; 0x38 <.do_clear_bss_start>

00000036 <.do_clear_bss_loop>:
  36:	1d 92       	st	X+, r1

00000038 <.do_clear_bss_start>:
  38:	ae 36       	cpi	r26, 0x6E	; 110
  3a:	b1 07       	cpc	r27, r17
  3c:	e1 f7       	brne	.-8      	; 0x36 <.do_clear_bss_loop>
  3e:	04 d1       	rcall	.+520    	; 0x248 <main>
  40:	84 c2       	rjmp	.+1288   	; 0x54a <_exit>

00000042 <__bad_interrupt>:
  42:	de cf       	rjmp	.-68     	; 0x0 <__vectors>

00000044 <__vector_3>:
  44:	8f 93       	push	r24
  46:	9f 93       	push	r25
  48:	8c b5       	in	r24, 0x2c	; 44
  4a:	78 94       	sei
  4c:	9d b5       	in	r25, 0x2d	; 45
  4e:	af 93       	push	r26
  50:	af b7       	in	r26, 0x3f	; 63
  52:	af 93       	push	r26
  54:	9e 9b       	sbis	0x13, 6	; 19
  56:	74 c1       	rjmp	.+744    	; 0x340 <_hw_swuart0_sync>
  58:	b0 99       	sbic	0x16, 0	; 22
  5a:	10 c0       	rjmp	.+32     	; 0x7c <_hw_swuart0_st99>
  5c:	ab b7       	in	r26, 0x3b	; 59
  5e:	af 7d       	andi	r26, 0xDF	; 223
  60:	ab bf       	out	0x3b, r26	; 59
  62:	a0 91 63 00 	lds	r26, 0x0063
  66:	8a 0f       	add	r24, r26
  68:	a0 91 64 00 	lds	r26, 0x0064
  6c:	9a 1f       	adc	r25, r26
  6e:	9b bd       	out	0x2b, r25	; 43
  70:	8a bd       	out	0x2a, r24	; 42
  72:	88 e0       	ldi	r24, 0x08	; 8
  74:	80 93 62 00 	sts	0x0062, r24
  78:	59 9a       	sbi	0x0b, 1	; 11
  7a:	61 9a       	sbi	0x0c, 1	; 12

0000007c <_hw_swuart0_st99>:
  7c:	af 91       	pop	r26
  7e:	af bf       	out	0x3f, r26	; 63
  80:	af 91       	pop	r26
  82:	9f 91       	pop	r25
  84:	8f 91       	pop	r24
  86:	18 95       	reti

00000088 <__vector_6>:
  88:	ff 93       	push	r31
  8a:	ff b7       	in	r31, 0x3f	; 63
  8c:	ff 93       	push	r31
  8e:	9c 99       	sbic	0x13, 4	; 19
  90:	36 c0       	rjmp	.+108    	; 0xfe <_hw_swuart0_tx>
  92:	78 94       	sei
  94:	f6 b3       	in	r31, 0x16	; 22
  96:	f0 fb       	bst	r31, 0
  98:	f0 91 61 00 	lds	r31, 0x0061
  9c:	f6 95       	lsr	r31
  9e:	f7 f9       	bld	r31, 7
  a0:	f0 93 61 00 	sts	0x0061, r31
  a4:	f0 91 62 00 	lds	r31, 0x0062
  a8:	f1 50       	subi	r31, 0x01	; 1
  aa:	f0 93 62 00 	sts	0x0062, r31
  ae:	ba f0       	brmi	.+46     	; 0xde <_hw_swuart0_rxeof>
  b0:	21 f4       	brne	.+8      	; 0xba <_hw_swuart0_next>
  b2:	f0 91 61 00 	lds	r31, 0x0061
  b6:	f0 93 60 00 	sts	0x0060, r31

000000ba <_hw_swuart0_next>:
  ba:	ef 93       	push	r30
  bc:	e0 91 65 00 	lds	r30, 0x0065
  c0:	f0 91 66 00 	lds	r31, 0x0066
  c4:	df 93       	push	r29
  c6:	da b5       	in	r29, 0x2a	; 42
  c8:	ed 0f       	add	r30, r29
  ca:	db b5       	in	r29, 0x2b	; 43
  cc:	fd 1f       	adc	r31, r29
  ce:	df 91       	pop	r29
  d0:	fb bd       	out	0x2b, r31	; 43
  d2:	ea bd       	out	0x2a, r30	; 42
  d4:	ef 91       	pop	r30
  d6:	ff 91       	pop	r31
  d8:	ff bf       	out	0x3f, r31	; 63
  da:	ff 91       	pop	r31
  dc:	18 95       	reti

000000de <_hw_swuart0_rxeof>:
  de:	f3 b3       	in	r31, 0x13	; 19
  e0:	f0 f9       	bld	r31, 0
  e2:	f0 62       	ori	r31, 0x20	; 32
  e4:	f6 fd       	sbrc	r31, 6
  e6:	f4 60       	ori	r31, 0x04	; 4
  e8:	f0 64       	ori	r31, 0x40	; 64
  ea:	f3 bb       	out	0x13, r31	; 19
  ec:	61 98       	cbi	0x0c, 1	; 12
  ee:	f0 e2       	ldi	r31, 0x20	; 32
  f0:	fa bf       	out	0x3a, r31	; 58
  f2:	f8 94       	cli
  f4:	fb b7       	in	r31, 0x3b	; 59
  f6:	f0 62       	ori	r31, 0x20	; 32
  f8:	78 94       	sei
  fa:	fb bf       	out	0x3b, r31	; 59
  fc:	de cf       	rjmp	.-68     	; 0xba <_hw_swuart0_next>

000000fe <_hw_swuart0_tx>:
  fe:	f0 91 61 00 	lds	r31, 0x0061
 102:	f6 95       	lsr	r31
 104:	18 f4       	brcc	.+6      	; 0x10c <_hw_swuart0_tx0>

00000106 <_hw_swuart0_tx1>:
 106:	78 94       	sei
 108:	c0 9a       	sbi	0x18, 0	; 24
 10a:	02 c0       	rjmp	.+4      	; 0x110 <_hw_swuart0_txn>

0000010c <_hw_swuart0_tx0>:
 10c:	78 94       	sei
 10e:	c0 98       	cbi	0x18, 0	; 24

00000110 <_hw_swuart0_txn>:
 110:	f0 93 61 00 	sts	0x0061, r31
 114:	f0 91 62 00 	lds	r31, 0x0062
 118:	f1 50       	subi	r31, 0x01	; 1
 11a:	f0 93 62 00 	sts	0x0062, r31
 11e:	2a f0       	brmi	.+10     	; 0x12a <_hw_swuart0_txeof>
 120:	19 f4       	brne	.+6      	; 0x128 <_hw_swuart0_txn+0x18>
 122:	f3 e0       	ldi	r31, 0x03	; 3
 124:	f0 93 61 00 	sts	0x0061, r31
 128:	c8 cf       	rjmp	.-112    	; 0xba <_hw_swuart0_next>

0000012a <_hw_swuart0_txeof>:
 12a:	9d 9a       	sbi	0x13, 5	; 19
 12c:	61 98       	cbi	0x0c, 1	; 12
 12e:	b8 98       	cbi	0x17, 0	; 23
 130:	c0 98       	cbi	0x18, 0	; 24
 132:	9b 9a       	sbi	0x13, 3	; 19
 134:	9c 98       	cbi	0x13, 4	; 19
 136:	f0 e2       	ldi	r31, 0x20	; 32
 138:	fa bf       	out	0x3a, r31	; 58
 13a:	f8 94       	cli
 13c:	fb b7       	in	r31, 0x3b	; 59
 13e:	f0 62       	ori	r31, 0x20	; 32
 140:	78 94       	sei
 142:	fb bf       	out	0x3b, r31	; 59
 144:	ba cf       	rjmp	.-140    	; 0xba <_hw_swuart0_next>

00000146 <__vector_2>:
 146:	8f 93       	push	r24
 148:	9f 93       	push	r25
 14a:	8c b5       	in	r24, 0x2c	; 44
 14c:	78 94       	sei
 14e:	9d b5       	in	r25, 0x2d	; 45
 150:	af 93       	push	r26
 152:	af b7       	in	r26, 0x3f	; 63
 154:	af 93       	push	r26
 156:	a6 9b       	sbis	0x14, 6	; 20
 158:	8b c1       	rjmp	.+790    	; 0x470 <_hw_swuart1_sync>
 15a:	cd 99       	sbic	0x19, 5	; 25
 15c:	10 c0       	rjmp	.+32     	; 0x17e <_hw_swuart1_st99>
 15e:	ab b7       	in	r26, 0x3b	; 59
 160:	af 7e       	andi	r26, 0xEF	; 239
 162:	ab bf       	out	0x3b, r26	; 59
 164:	a0 91 6a 00 	lds	r26, 0x006A
 168:	8a 0f       	add	r24, r26
 16a:	a0 91 6b 00 	lds	r26, 0x006B
 16e:	9a 1f       	adc	r25, r26
 170:	99 bd       	out	0x29, r25	; 41
 172:	88 bd       	out	0x28, r24	; 40
 174:	88 e0       	ldi	r24, 0x08	; 8
 176:	80 93 69 00 	sts	0x0069, r24
 17a:	5a 9a       	sbi	0x0b, 2	; 11
 17c:	62 9a       	sbi	0x0c, 2	; 12

0000017e <_hw_swuart1_st99>:
 17e:	af 91       	pop	r26
 180:	af bf       	out	0x3f, r26	; 63
 182:	af 91       	pop	r26
 184:	9f 91       	pop	r25
 186:	8f 91       	pop	r24
 188:	18 95       	reti

0000018a <__vector_7>:
 18a:	ff 93       	push	r31
 18c:	ff b7       	in	r31, 0x3f	; 63
 18e:	ff 93       	push	r31
 190:	a4 99       	sbic	0x14, 4	; 20
 192:	36 c0       	rjmp	.+108    	; 0x200 <_hw_swuart1_tx>
 194:	78 94       	sei
 196:	f9 b3       	in	r31, 0x19	; 25
 198:	f5 fb       	bst	r31, 5
 19a:	f0 91 68 00 	lds	r31, 0x0068
 19e:	f6 95       	lsr	r31
 1a0:	f7 f9       	bld	r31, 7
 1a2:	f0 93 68 00 	sts	0x0068, r31
 1a6:	f0 91 69 00 	lds	r31, 0x0069
 1aa:	f1 50       	subi	r31, 0x01	; 1
 1ac:	f0 93 69 00 	sts	0x0069, r31
 1b0:	ba f0       	brmi	.+46     	; 0x1e0 <_hw_swuart1_rxeof>
 1b2:	21 f4       	brne	.+8      	; 0x1bc <_hw_swuart1_next>
 1b4:	f0 91 68 00 	lds	r31, 0x0068
 1b8:	f0 93 67 00 	sts	0x0067, r31

000001bc <_hw_swuart1_next>:
 1bc:	ef 93       	push	r30
 1be:	e0 91 6c 00 	lds	r30, 0x006C
 1c2:	f0 91 6d 00 	lds	r31, 0x006D
 1c6:	df 93       	push	r29
 1c8:	d8 b5       	in	r29, 0x28	; 40
 1ca:	ed 0f       	add	r30, r29
 1cc:	d9 b5       	in	r29, 0x29	; 41
 1ce:	fd 1f       	adc	r31, r29
 1d0:	df 91       	pop	r29
 1d2:	f9 bd       	out	0x29, r31	; 41
 1d4:	e8 bd       	out	0x28, r30	; 40
 1d6:	ef 91       	pop	r30
 1d8:	ff 91       	pop	r31
 1da:	ff bf       	out	0x3f, r31	; 63
 1dc:	ff 91       	pop	r31
 1de:	18 95       	reti

000001e0 <_hw_swuart1_rxeof>:
 1e0:	f4 b3       	in	r31, 0x14	; 20
 1e2:	f0 f9       	bld	r31, 0
 1e4:	f0 62       	ori	r31, 0x20	; 32
 1e6:	f6 fd       	sbrc	r31, 6
 1e8:	f4 60       	ori	r31, 0x04	; 4
 1ea:	f0 64       	ori	r31, 0x40	; 64
 1ec:	f4 bb       	out	0x14, r31	; 20
 1ee:	62 98       	cbi	0x0c, 2	; 12
 1f0:	f0 e1       	ldi	r31, 0x10	; 16
 1f2:	fa bf       	out	0x3a, r31	; 58
 1f4:	f8 94       	cli
 1f6:	fb b7       	in	r31, 0x3b	; 59
 1f8:	f0 61       	ori	r31, 0x10	; 16
 1fa:	78 94       	sei
 1fc:	fb bf       	out	0x3b, r31	; 59
 1fe:	de cf       	rjmp	.-68     	; 0x1bc <_hw_swuart1_next>

00000200 <_hw_swuart1_tx>:
 200:	f0 91 68 00 	lds	r31, 0x0068
 204:	f6 95       	lsr	r31
 206:	18 f4       	brcc	.+6      	; 0x20e <_hw_swuart1_tx0>

00000208 <_hw_swuart1_tx1>:
 208:	78 94       	sei
 20a:	dd 9a       	sbi	0x1b, 5	; 27
 20c:	02 c0       	rjmp	.+4      	; 0x212 <_hw_swuart1_txn>

0000020e <_hw_swuart1_tx0>:
 20e:	78 94       	sei
 210:	dd 98       	cbi	0x1b, 5	; 27

00000212 <_hw_swuart1_txn>:
 212:	f0 93 68 00 	sts	0x0068, r31
 216:	f0 91 69 00 	lds	r31, 0x0069
 21a:	f1 50       	subi	r31, 0x01	; 1
 21c:	f0 93 69 00 	sts	0x0069, r31
 220:	2a f0       	brmi	.+10     	; 0x22c <_hw_swuart1_txeof>
 222:	19 f4       	brne	.+6      	; 0x22a <_hw_swuart1_txn+0x18>
 224:	f3 e0       	ldi	r31, 0x03	; 3
 226:	f0 93 68 00 	sts	0x0068, r31
 22a:	c8 cf       	rjmp	.-112    	; 0x1bc <_hw_swuart1_next>

0000022c <_hw_swuart1_txeof>:
 22c:	a5 9a       	sbi	0x14, 5	; 20
 22e:	62 98       	cbi	0x0c, 2	; 12
 230:	d5 98       	cbi	0x1a, 5	; 26
 232:	dd 98       	cbi	0x1b, 5	; 27
 234:	a3 9a       	sbi	0x14, 3	; 20
 236:	a4 98       	cbi	0x14, 4	; 20
 238:	f0 e1       	ldi	r31, 0x10	; 16
 23a:	fa bf       	out	0x3a, r31	; 58
 23c:	f8 94       	cli
 23e:	fb b7       	in	r31, 0x3b	; 59
 240:	f0 61       	ori	r31, 0x10	; 16
 242:	78 94       	sei
 244:	fb bf       	out	0x3b, r31	; 59
 246:	ba cf       	rjmp	.-140    	; 0x1bc <_hw_swuart1_next>

00000248 <main>:

    if ( rm == 0 )
      /*
       *  Nothing to be read, just write the new value
       */
      *p = v ;
 248:	8f ef       	ldi	r24, 0xFF	; 255
 24a:	81 bf       	out	0x31, r24	; 49
     */
    r->ovalue = ((r->ovalue & ~wm) | (r->mvalue & wm)) & ~rfm ;

    /*  Write new value
     */
    *p = r->ovalue | (rfm & r->mmask & r->mvalue) ;
 24c:	80 e3       	ldi	r24, 0x30	; 48
 24e:	8b bf       	out	0x3b, r24	; 59
 250:	8a bf       	out	0x3a, r24	; 58
 252:	80 e2       	ldi	r24, 0x20	; 32
 254:	85 bf       	out	0x35, r24	; 53
      /*
       *  Just 1 bit to be modified at C address < 0x40 (ASM address < 0x20): use
       *  instruction CBI or SBI
       */
      if ( wm & r->mvalue )
	*p |= wm ; /* sbi */
 256:	d6 9a       	sbi	0x1a, 6	; 26
 258:	95 9a       	sbi	0x12, 5	; 18
     */
    r->ovalue = ((r->ovalue & ~wm) | (r->mvalue & wm)) & ~rfm ;

    /*  Write new value
     */
    *p = r->ovalue | (rfm & r->mmask & r->mvalue) ;
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	80 bd       	out	0x20, r24	; 32
 25e:	8e bd       	out	0x2e, r24	; 46
   */
  hwa_commit();

  /*  Interrupt requests must be serviced for swuart
   */
  hw_enable_interrupts();
 260:	78 94       	sei
    /*
     *  Just 1 bit to be written at C address < 0x40 (ASM address < 0x20): use
     *  sbi/cbi
     */
    if ( v )
      *p |= wm ; /* sbi */
 262:	de 9a       	sbi	0x1b, 6	; 27
    /*
     *  Resynchronize UART
     */
    hw_write( PIN_LED, 1 );

    hw_reset( hw_swuart0 );
 264:	c5 d0       	rcall	.+394    	; 0x3f0 <_hw_swuart0_reset>
    hw_reset( hw_swuart1 );
 266:	5c d1       	rcall	.+696    	; 0x520 <_hw_swuart1_reset>
    for(;;) {
      hw_sleep();
 268:	88 95       	sleep
      if ( hw_stat(hw_swuart0).synced ) {
 26a:	9e 9b       	sbis	0x13, 6	; 19
 26c:	14 c0       	rjmp	.+40     	; 0x296 <__stack+0x37>
        hw_write( hw_swuart0, '$');     /* signal the synchronization */
 26e:	84 e2       	ldi	r24, 0x24	; 36
 270:	42 d0       	rcall	.+132    	; 0x2f6 <_hw_swuart0_putbyte>

HW_INLINE uint16_t _hw_read__r16 ( intptr_t ra, uint8_t rbn, uint8_t rbp )
{
  uint16_t m = (1UL<<rbn)-1 ;
  volatile uint16_t *p = (volatile uint16_t *)ra ;
  return ((*p)>>rbp) & m ;
 272:	80 91 63 00 	lds	r24, 0x0063
 276:	90 91 64 00 	lds	r25, 0x0064

    if ( rm == 0 )
      /*
       *  Nothing to be read, just write the new value
       */
      *p = v ;
 27a:	90 93 6b 00 	sts	0x006B, r25
 27e:	80 93 6a 00 	sts	0x006A, r24

HW_INLINE uint16_t _hw_read__r16 ( intptr_t ra, uint8_t rbn, uint8_t rbp )
{
  uint16_t m = (1UL<<rbn)-1 ;
  volatile uint16_t *p = (volatile uint16_t *)ra ;
  return ((*p)>>rbp) & m ;
 282:	80 91 65 00 	lds	r24, 0x0065
 286:	90 91 66 00 	lds	r25, 0x0066

    if ( rm == 0 )
      /*
       *  Nothing to be read, just write the new value
       */
      *p = v ;
 28a:	90 93 6d 00 	sts	0x006D, r25
 28e:	80 93 6c 00 	sts	0x006C, r24
    /*
     *  Just 1 bit to be written at C address < 0x40 (ASM address < 0x20): use
     *  sbi/cbi
     */
    if ( v )
      *p |= wm ; /* sbi */
 292:	a0 9a       	sbi	0x14, 0	; 20
 294:	15 c0       	rjmp	.+42     	; 0x2c0 <__stack+0x61>
        hw_write_reg( hw_swuart1, dt0, hw_read_reg( hw_swuart0, dt0 ) );
        hw_write_reg( hw_swuart1, dtn, hw_read_reg( hw_swuart0, dtn ) );
        hw_write_reg( hw_swuart1, synced, 1 );
        break ;
      }
      if ( hw_stat(hw_swuart1).synced ) {
 296:	a6 9b       	sbis	0x14, 6	; 20
 298:	e7 cf       	rjmp	.-50     	; 0x268 <__stack+0x9>
        hw_write( hw_swuart1, '$');     /* signal the synchronization */
 29a:	84 e2       	ldi	r24, 0x24	; 36
 29c:	c4 d0       	rcall	.+392    	; 0x426 <_hw_swuart1_putbyte>

HW_INLINE uint16_t _hw_read__r16 ( intptr_t ra, uint8_t rbn, uint8_t rbp )
{
  uint16_t m = (1UL<<rbn)-1 ;
  volatile uint16_t *p = (volatile uint16_t *)ra ;
  return ((*p)>>rbp) & m ;
 29e:	80 91 6a 00 	lds	r24, 0x006A
 2a2:	90 91 6b 00 	lds	r25, 0x006B

    if ( rm == 0 )
      /*
       *  Nothing to be read, just write the new value
       */
      *p = v ;
 2a6:	90 93 64 00 	sts	0x0064, r25
 2aa:	80 93 63 00 	sts	0x0063, r24

HW_INLINE uint16_t _hw_read__r16 ( intptr_t ra, uint8_t rbn, uint8_t rbp )
{
  uint16_t m = (1UL<<rbn)-1 ;
  volatile uint16_t *p = (volatile uint16_t *)ra ;
  return ((*p)>>rbp) & m ;
 2ae:	80 91 6c 00 	lds	r24, 0x006C
 2b2:	90 91 6d 00 	lds	r25, 0x006D

    if ( rm == 0 )
      /*
       *  Nothing to be read, just write the new value
       */
      *p = v ;
 2b6:	90 93 66 00 	sts	0x0066, r25
 2ba:	80 93 65 00 	sts	0x0065, r24
    /*
     *  Just 1 bit to be written at C address < 0x40 (ASM address < 0x20): use
     *  sbi/cbi
     */
    if ( v )
      *p |= wm ; /* sbi */
 2be:	98 9a       	sbi	0x13, 0	; 19
    else {
      if ( wm & rfm )
	HWA_ERR("flag bit can only be cleared by writing 1 into it.");
      *p &= ~wm ; /* cbi */
 2c0:	de 98       	cbi	0x1b, 6	; 27
      }
    }
    hw_write( PIN_LED, 0 );

    for(;;) {
      hw_sleep();
 2c2:	88 95       	sleep
      if ( hw_stat(hw_swuart0).rxc ) {
 2c4:	9a 9b       	sbis	0x13, 2	; 19
 2c6:	07 c0       	rjmp	.+14     	; 0x2d6 <__stack+0x77>
        /*
         *  UART0 -> UART0 + UART1
         */
        if ( hw_stat(hw_swuart0).stop == 0 )
 2c8:	98 9b       	sbis	0x13, 0	; 19
 2ca:	cb cf       	rjmp	.-106    	; 0x262 <__stack+0x3>
          break ;       /* null stop -> resynchronize */

        uint8_t byte = hw_read(hw_swuart0);
 2cc:	0e d0       	rcall	.+28     	; 0x2ea <_hw_swuart0_getbyte>
 2ce:	c8 2f       	mov	r28, r24
        hw_write( hw_swuart0, byte );
 2d0:	12 d0       	rcall	.+36     	; 0x2f6 <_hw_swuart0_putbyte>
        hw_write( hw_swuart1, byte );
 2d2:	8c 2f       	mov	r24, r28
 2d4:	a8 d0       	rcall	.+336    	; 0x426 <_hw_swuart1_putbyte>
      }
      if ( hw_stat(hw_swuart1).rxc ) {
 2d6:	a2 9b       	sbis	0x14, 2	; 20
 2d8:	f4 cf       	rjmp	.-24     	; 0x2c2 <__stack+0x63>
        /*
         *  UART1 -> UART1 + UART0
         */
        if ( hw_stat(hw_swuart1).stop == 0 )
 2da:	a0 9b       	sbis	0x14, 0	; 20
 2dc:	c2 cf       	rjmp	.-124    	; 0x262 <__stack+0x3>
          break ;       /* null stop -> resynchronize */

        uint8_t byte = hw_read(hw_swuart1);
 2de:	9d d0       	rcall	.+314    	; 0x41a <_hw_swuart1_getbyte>
 2e0:	c8 2f       	mov	r28, r24
        hw_write( hw_swuart1, byte );
 2e2:	a1 d0       	rcall	.+322    	; 0x426 <_hw_swuart1_putbyte>
        hw_write( hw_swuart0, byte );
 2e4:	8c 2f       	mov	r24, r28
 2e6:	07 d0       	rcall	.+14     	; 0x2f6 <_hw_swuart0_putbyte>
 2e8:	ec cf       	rjmp	.-40     	; 0x2c2 <__stack+0x63>

000002ea <_hw_swuart0_getbyte>:
 2ea:	9a 9b       	sbis	0x13, 2	; 19
 2ec:	fe cf       	rjmp	.-4      	; 0x2ea <_hw_swuart0_getbyte>
 2ee:	9a 98       	cbi	0x13, 2	; 19
 2f0:	80 91 60 00 	lds	r24, 0x0060
 2f4:	08 95       	ret

000002f6 <_hw_swuart0_putbyte>:
 2f6:	98 e0       	ldi	r25, 0x08	; 8

000002f8 <_hw_swuart0_putbits>:
 2f8:	20 d0       	rcall	.+64     	; 0x33a <_hw_swuart0_wait_ready>
 2fa:	9d 9b       	sbis	0x13, 5	; 19
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <_hw_swuart0_putbits+0xa>
 2fe:	59 9b       	sbis	0x0b, 1	; 11
 300:	fe cf       	rjmp	.-4      	; 0x2fe <_hw_swuart0_putbits+0x6>
 302:	ab b7       	in	r26, 0x3b	; 59
 304:	af 7d       	andi	r26, 0xDF	; 223
 306:	ab bf       	out	0x3b, r26	; 59
 308:	80 93 61 00 	sts	0x0061, r24
 30c:	83 e5       	ldi	r24, 0x53	; 83
 30e:	83 bb       	out	0x13, r24	; 19
 310:	90 93 62 00 	sts	0x0062, r25
 314:	c0 9a       	sbi	0x18, 0	; 24
 316:	b8 9a       	sbi	0x17, 0	; 23
 318:	f8 94       	cli
 31a:	8c b5       	in	r24, 0x2c	; 44
 31c:	9d b5       	in	r25, 0x2d	; 45
 31e:	78 94       	sei
 320:	c0 98       	cbi	0x18, 0	; 24
 322:	a0 91 65 00 	lds	r26, 0x0065
 326:	b0 91 66 00 	lds	r27, 0x0066
 32a:	53 97       	sbiw	r26, 0x13	; 19
 32c:	8a 0f       	add	r24, r26
 32e:	9b 1f       	adc	r25, r27
 330:	9b bd       	out	0x2b, r25	; 43
 332:	8a bd       	out	0x2a, r24	; 42
 334:	59 9a       	sbi	0x0b, 1	; 11
 336:	61 9a       	sbi	0x0c, 1	; 12
 338:	08 95       	ret

0000033a <_hw_swuart0_wait_ready>:
 33a:	61 99       	sbic	0x0c, 1	; 12
 33c:	fe cf       	rjmp	.-4      	; 0x33a <_hw_swuart0_wait_ready>
 33e:	08 95       	ret

00000340 <_hw_swuart0_sync>:
 340:	b0 99       	sbic	0x16, 0	; 22
 342:	0b c0       	rjmp	.+22     	; 0x35a <_hw_swuart0_sync+0x1a>
 344:	8a bd       	out	0x2a, r24	; 42
 346:	9b bd       	out	0x2b, r25	; 43
 348:	a0 91 65 00 	lds	r26, 0x0065
 34c:	a0 93 63 00 	sts	0x0063, r26
 350:	a0 91 66 00 	lds	r26, 0x0066
 354:	a0 93 64 00 	sts	0x0064, r26
 358:	91 ce       	rjmp	.-734    	; 0x7c <_hw_swuart0_st99>
 35a:	cf 93       	push	r28
 35c:	bf 93       	push	r27
 35e:	df 93       	push	r29
 360:	aa b5       	in	r26, 0x2a	; 42
 362:	8a 1b       	sub	r24, r26
 364:	80 93 65 00 	sts	0x0065, r24
 368:	bb b5       	in	r27, 0x2b	; 43
 36a:	9b 0b       	sbc	r25, r27
 36c:	90 93 66 00 	sts	0x0066, r25
 370:	dc 01       	movw	r26, r24
 372:	aa 0f       	add	r26, r26
 374:	bb 1f       	adc	r27, r27
 376:	aa 0f       	add	r26, r26
 378:	bb 1f       	adc	r27, r27
 37a:	a8 0f       	add	r26, r24
 37c:	b9 1f       	adc	r27, r25
 37e:	ec 01       	movw	r28, r24
 380:	22 96       	adiw	r28, 0x02	; 2
 382:	d6 95       	lsr	r29
 384:	c7 95       	ror	r28
 386:	d6 95       	lsr	r29
 388:	c7 95       	ror	r28
 38a:	ac 1b       	sub	r26, r28
 38c:	bd 0b       	sbc	r27, r29
 38e:	80 91 63 00 	lds	r24, 0x0063
 392:	8a 17       	cp	r24, r26
 394:	90 91 64 00 	lds	r25, 0x0064
 398:	9b 07       	cpc	r25, r27
 39a:	30 f1       	brcs	.+76     	; 0x3e8 <_hw_swuart0_sync+0xa8>
 39c:	ac 0f       	add	r26, r28
 39e:	bd 1f       	adc	r27, r29
 3a0:	ac 0f       	add	r26, r28
 3a2:	bd 1f       	adc	r27, r29
 3a4:	8a 17       	cp	r24, r26
 3a6:	9b 07       	cpc	r25, r27
 3a8:	f8 f4       	brcc	.+62     	; 0x3e8 <_hw_swuart0_sync+0xa8>
 3aa:	80 91 65 00 	lds	r24, 0x0065
 3ae:	90 91 66 00 	lds	r25, 0x0066
 3b2:	dc 01       	movw	r26, r24
 3b4:	11 96       	adiw	r26, 0x01	; 1
 3b6:	b6 95       	lsr	r27
 3b8:	a7 95       	ror	r26
 3ba:	8a 0f       	add	r24, r26
 3bc:	9b 1f       	adc	r25, r27
 3be:	89 52       	subi	r24, 0x29	; 41
 3c0:	90 40       	sbci	r25, 0x00	; 0
 3c2:	80 93 63 00 	sts	0x0063, r24
 3c6:	90 93 64 00 	sts	0x0064, r25
 3ca:	8a b5       	in	r24, 0x2a	; 42
 3cc:	90 91 65 00 	lds	r25, 0x0065
 3d0:	89 0f       	add	r24, r25
 3d2:	8a bd       	out	0x2a, r24	; 42
 3d4:	8b b5       	in	r24, 0x2b	; 43
 3d6:	90 91 66 00 	lds	r25, 0x0066
 3da:	89 1f       	adc	r24, r25
 3dc:	8b bd       	out	0x2b, r24	; 43
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	80 93 62 00 	sts	0x0062, r24
 3e4:	59 9a       	sbi	0x0b, 1	; 11
 3e6:	61 9a       	sbi	0x0c, 1	; 12
 3e8:	df 91       	pop	r29
 3ea:	bf 91       	pop	r27
 3ec:	cf 91       	pop	r28
 3ee:	46 ce       	rjmp	.-884    	; 0x7c <_hw_swuart0_st99>

000003f0 <_hw_swuart0_reset>:
 3f0:	61 98       	cbi	0x0c, 1	; 12
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	83 bb       	out	0x13, r24	; 19
 3f6:	80 93 62 00 	sts	0x0062, r24
 3fa:	80 93 65 00 	sts	0x0065, r24
 3fe:	80 93 66 00 	sts	0x0066, r24
 402:	80 93 63 00 	sts	0x0063, r24
 406:	80 93 64 00 	sts	0x0064, r24
 40a:	80 e2       	ldi	r24, 0x20	; 32
 40c:	8a bf       	out	0x3a, r24	; 58
 40e:	f8 94       	cli
 410:	8b b7       	in	r24, 0x3b	; 59
 412:	80 62       	ori	r24, 0x20	; 32
 414:	78 94       	sei
 416:	8b bf       	out	0x3b, r24	; 59
 418:	08 95       	ret

0000041a <_hw_swuart1_getbyte>:
 41a:	a2 9b       	sbis	0x14, 2	; 20
 41c:	fe cf       	rjmp	.-4      	; 0x41a <_hw_swuart1_getbyte>
 41e:	a2 98       	cbi	0x14, 2	; 20
 420:	80 91 67 00 	lds	r24, 0x0067
 424:	08 95       	ret

00000426 <_hw_swuart1_putbyte>:
 426:	98 e0       	ldi	r25, 0x08	; 8

00000428 <_hw_swuart1_putbits>:
 428:	20 d0       	rcall	.+64     	; 0x46a <_hw_swuart1_wait_ready>
 42a:	a5 9b       	sbis	0x14, 5	; 20
 42c:	02 c0       	rjmp	.+4      	; 0x432 <_hw_swuart1_putbits+0xa>
 42e:	5a 9b       	sbis	0x0b, 2	; 11
 430:	fe cf       	rjmp	.-4      	; 0x42e <_hw_swuart1_putbits+0x6>
 432:	ab b7       	in	r26, 0x3b	; 59
 434:	af 7e       	andi	r26, 0xEF	; 239
 436:	ab bf       	out	0x3b, r26	; 59
 438:	80 93 68 00 	sts	0x0068, r24
 43c:	83 e5       	ldi	r24, 0x53	; 83
 43e:	84 bb       	out	0x14, r24	; 20
 440:	90 93 69 00 	sts	0x0069, r25
 444:	dd 9a       	sbi	0x1b, 5	; 27
 446:	d5 9a       	sbi	0x1a, 5	; 26
 448:	f8 94       	cli
 44a:	8c b5       	in	r24, 0x2c	; 44
 44c:	9d b5       	in	r25, 0x2d	; 45
 44e:	78 94       	sei
 450:	dd 98       	cbi	0x1b, 5	; 27
 452:	a0 91 6c 00 	lds	r26, 0x006C
 456:	b0 91 6d 00 	lds	r27, 0x006D
 45a:	53 97       	sbiw	r26, 0x13	; 19
 45c:	8a 0f       	add	r24, r26
 45e:	9b 1f       	adc	r25, r27
 460:	99 bd       	out	0x29, r25	; 41
 462:	88 bd       	out	0x28, r24	; 40
 464:	5a 9a       	sbi	0x0b, 2	; 11
 466:	62 9a       	sbi	0x0c, 2	; 12
 468:	08 95       	ret

0000046a <_hw_swuart1_wait_ready>:
 46a:	62 99       	sbic	0x0c, 2	; 12
 46c:	fe cf       	rjmp	.-4      	; 0x46a <_hw_swuart1_wait_ready>
 46e:	08 95       	ret

00000470 <_hw_swuart1_sync>:
 470:	cd 99       	sbic	0x19, 5	; 25
 472:	0b c0       	rjmp	.+22     	; 0x48a <_hw_swuart1_sync+0x1a>
 474:	88 bd       	out	0x28, r24	; 40
 476:	99 bd       	out	0x29, r25	; 41
 478:	a0 91 6c 00 	lds	r26, 0x006C
 47c:	a0 93 6a 00 	sts	0x006A, r26
 480:	a0 91 6d 00 	lds	r26, 0x006D
 484:	a0 93 6b 00 	sts	0x006B, r26
 488:	7a ce       	rjmp	.-780    	; 0x17e <_hw_swuart1_st99>
 48a:	cf 93       	push	r28
 48c:	bf 93       	push	r27
 48e:	df 93       	push	r29
 490:	a8 b5       	in	r26, 0x28	; 40
 492:	8a 1b       	sub	r24, r26
 494:	80 93 6c 00 	sts	0x006C, r24
 498:	b9 b5       	in	r27, 0x29	; 41
 49a:	9b 0b       	sbc	r25, r27
 49c:	90 93 6d 00 	sts	0x006D, r25
 4a0:	dc 01       	movw	r26, r24
 4a2:	aa 0f       	add	r26, r26
 4a4:	bb 1f       	adc	r27, r27
 4a6:	aa 0f       	add	r26, r26
 4a8:	bb 1f       	adc	r27, r27
 4aa:	a8 0f       	add	r26, r24
 4ac:	b9 1f       	adc	r27, r25
 4ae:	ec 01       	movw	r28, r24
 4b0:	22 96       	adiw	r28, 0x02	; 2
 4b2:	d6 95       	lsr	r29
 4b4:	c7 95       	ror	r28
 4b6:	d6 95       	lsr	r29
 4b8:	c7 95       	ror	r28
 4ba:	ac 1b       	sub	r26, r28
 4bc:	bd 0b       	sbc	r27, r29
 4be:	80 91 6a 00 	lds	r24, 0x006A
 4c2:	8a 17       	cp	r24, r26
 4c4:	90 91 6b 00 	lds	r25, 0x006B
 4c8:	9b 07       	cpc	r25, r27
 4ca:	30 f1       	brcs	.+76     	; 0x518 <_hw_swuart1_sync+0xa8>
 4cc:	ac 0f       	add	r26, r28
 4ce:	bd 1f       	adc	r27, r29
 4d0:	ac 0f       	add	r26, r28
 4d2:	bd 1f       	adc	r27, r29
 4d4:	8a 17       	cp	r24, r26
 4d6:	9b 07       	cpc	r25, r27
 4d8:	f8 f4       	brcc	.+62     	; 0x518 <_hw_swuart1_sync+0xa8>
 4da:	80 91 6c 00 	lds	r24, 0x006C
 4de:	90 91 6d 00 	lds	r25, 0x006D
 4e2:	dc 01       	movw	r26, r24
 4e4:	11 96       	adiw	r26, 0x01	; 1
 4e6:	b6 95       	lsr	r27
 4e8:	a7 95       	ror	r26
 4ea:	8a 0f       	add	r24, r26
 4ec:	9b 1f       	adc	r25, r27
 4ee:	89 52       	subi	r24, 0x29	; 41
 4f0:	90 40       	sbci	r25, 0x00	; 0
 4f2:	80 93 6a 00 	sts	0x006A, r24
 4f6:	90 93 6b 00 	sts	0x006B, r25
 4fa:	88 b5       	in	r24, 0x28	; 40
 4fc:	90 91 6c 00 	lds	r25, 0x006C
 500:	89 0f       	add	r24, r25
 502:	88 bd       	out	0x28, r24	; 40
 504:	89 b5       	in	r24, 0x29	; 41
 506:	90 91 6d 00 	lds	r25, 0x006D
 50a:	89 1f       	adc	r24, r25
 50c:	89 bd       	out	0x29, r24	; 41
 50e:	80 e0       	ldi	r24, 0x00	; 0
 510:	80 93 69 00 	sts	0x0069, r24
 514:	5a 9a       	sbi	0x0b, 2	; 11
 516:	62 9a       	sbi	0x0c, 2	; 12
 518:	df 91       	pop	r29
 51a:	bf 91       	pop	r27
 51c:	cf 91       	pop	r28
 51e:	2f ce       	rjmp	.-930    	; 0x17e <_hw_swuart1_st99>

00000520 <_hw_swuart1_reset>:
 520:	62 98       	cbi	0x0c, 2	; 12
 522:	80 e0       	ldi	r24, 0x00	; 0
 524:	84 bb       	out	0x14, r24	; 20
 526:	80 93 69 00 	sts	0x0069, r24
 52a:	80 93 6c 00 	sts	0x006C, r24
 52e:	80 93 6d 00 	sts	0x006D, r24
 532:	80 93 6a 00 	sts	0x006A, r24
 536:	80 93 6b 00 	sts	0x006B, r24
 53a:	80 e1       	ldi	r24, 0x10	; 16
 53c:	8a bf       	out	0x3a, r24	; 58
 53e:	f8 94       	cli
 540:	8b b7       	in	r24, 0x3b	; 59
 542:	80 61       	ori	r24, 0x10	; 16
 544:	78 94       	sei
 546:	8b bf       	out	0x3b, r24	; 59
 548:	08 95       	ret

0000054a <_exit>:
 54a:	f8 94       	cli

0000054c <__stop_program>:
 54c:	ff cf       	rjmp	.-2      	; 0x54c <__stop_program>
