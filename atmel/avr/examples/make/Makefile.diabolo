
#	-*- makefile -*-

#$(warning INCLUDE)
MFD	:=	$(dir $(lastword $(MAKEFILE_LIST)))

-include $(MFD)../boards/Makefile.$(BOARD)
-include $(MFD)../boards/build/$(BOARD)

#  Compute how long TXD must be held low so that the device has the time to
#  start (assumes 65 ms + 32KCK) and the bootloader has the time to check the
#  CRC of the application (30 cycles/byte).
#
KEEP_TXD_LOW	= \
	$(shell \
	SUT=$$(( 65 + (32768+30*$(DEVICE_FLASH_SIZE))*1000/$(DEVICE_SYSHZ) ))	;\
	i=$$(( $$SUT / 1000 ))							;\
	t=$$(( $$SUT - 1000 * $$i ))						;\
	printf "%d.%03d" $$i $$t )

#  Diabolo options
#
ifneq (,$(DIABOLO_BPS))
   DIABOLO_OPTS	 += --bps=$(DIABOLO_BPS)
endif

DIABOLO_OPTS	 += --keep-txd-low=$(KEEP_TXD_LOW)

#DIABOLO_OPTS	 += --char-delay=$(DIABOLO_CHAR_DELAY)

ifneq (,$(DIABOLO_SYNC))
  DIABOLO_OPTS	 += --sync=$(DIABOLO_SYNC)
endif

DIABOLO_OPTS	 += --mcu=$(DEVICE)

DIABOLO_OPTS	 += --diag

#DIABOLO_OPTS	 += --debug


.PHONY: erase
erase:
	$(diabolo) $(DIABOLO_OPTS)	\
		--erase-flash


.PHONY: install
install: $(OUT).bin
	@$(diabolo) $(DIABOLO_OPTS)		\
		--cache=/tmp/diabolo-cache.bin	\
		--burn-flash $<


.PHONY: diabolo
diabolo:
	@$(diabolo) $(DIABOLO_OPTS)


.PHONY: identify
identify:
	@$(diabolo) $(DIABOLO_OPTS)


.PHONY: decode-fuses
decode-fuses:
	@$(diabolo) $(DIABOLO_OPTS) --decode-fuses


.PHONY: reset
reset:
	@$(diabolo) --reset
