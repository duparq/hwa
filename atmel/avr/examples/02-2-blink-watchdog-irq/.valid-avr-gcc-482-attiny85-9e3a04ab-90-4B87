HW_DEVICE="attiny85"
hw_syshz="16000000"
PIN_LED="pin_pb0"
TIMEOUT="250ms"

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0b c0       	rjmp	.+22     	; 0x30 <__vector_12>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	0d d0       	rcall	.+26     	; 0x46 <main>
  2c:	14 c0       	rjmp	.+40     	; 0x56 <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <__vector_12>:

/*  Service watchdog IRQ
 */
HW_ISR( hw_wdog0 )
{
  30:	1f 92       	push	r1
  32:	0f 92       	push	r0
  34:	0f b6       	in	r0, 0x3f	; 63
  36:	0f 92       	push	r0
  38:	11 24       	eor	r1, r1
    /*
     *  Just 1 bit to be written at C address < 0x40 (ASM address < 0x20): use
     *  sbi/cbi
     */
    if ( v )
      *p |= wm ; /* sbi */
  3a:	b0 9a       	sbi	0x16, 0	; 22
  /*  Blink the LED
   */
  hw_toggle( PIN_LED );
}
  3c:	0f 90       	pop	r0
  3e:	0f be       	out	0x3f, r0	; 63
  40:	0f 90       	pop	r0
  42:	1f 90       	pop	r1
  44:	18 95       	reti

00000046 <main>:
     */
    r->ovalue = ((r->ovalue & ~wm) | (r->mvalue & wm)) & ~rfm ;

    /*  Write new value
     */
    *p = r->ovalue | (rfm & r->mmask & r->mvalue) ;
  46:	80 e2       	ldi	r24, 0x20	; 32
  48:	85 bf       	out	0x35, r24	; 53
  4a:	84 e4       	ldi	r24, 0x44	; 68
  4c:	81 bd       	out	0x21, r24	; 33
      /*
       *  Just 1 bit to be modified at C address < 0x40 (ASM address < 0x20): use
       *  instruction CBI or SBI
       */
      if ( wm & r->mvalue )
	*p |= wm ; /* sbi */
  4e:	b8 9a       	sbi	0x17, 0	; 23
   */
  hwa_commit();

  /*  Enable interrupts
   */
  hw_enable_interrupts();
  50:	78 94       	sei

  /*  Sleep between interrupts
   */
  for(;;)
    hw_sleep();
  52:	88 95       	sleep
  54:	fe cf       	rjmp	.-4      	; 0x52 <main+0xc>

00000056 <_exit>:
  56:	f8 94       	cli

00000058 <__stop_program>:
  58:	ff cf       	rjmp	.-2      	; 0x58 <__stop_program>
