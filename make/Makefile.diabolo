
#	-*- makefile -*-

#$(warning "INCLUDE: Makefile.diabolo")

PATH		:= $(HWA)/examples/atmel/avr/diabolo/host:$(PATH)

INC_DIABOLO	= $(OUTDIR)/$(OUT).diabolo


#  Extract Diabolo parameters from sources
#
#$(INC_DIABOLO): $(INC_HWA) $(DEPS) $(SOURCES)
#build/out.diabolo: $(INC_HWA) $(DEPS) $(SOURCES)
build/out.diabolo: $(SOURCES)
#	@echo "RULE: $@: $^"
	@mkdir -p $(OUTDIR)
	@>$@
	@for f in $(SOURCES) ; do \
	  if $(CC) $(CFLAGS) -dM -E "$$f" | grep '#define DIABOLO_' >$@.tmp ; then	\
	    awk -F"[ ,]" '{print $$2 "=" $$3}' $@.tmp >$@ 				;\
	    break									;\
	  fi ;\
	done
#	@rm -f $@.tmp

#$(warning "INC_DIABOLO: $(INC_DIABOLO): $(INC_HWA) $(DEPS) $(SOURCES)")

-include $(INC_DIABOLO)

#  Diabolo options
#
DIABOLO_OPTS	 = --mcu=$(DEVICE)

ifneq (,$(DIABOLO_BPS))
   DIABOLO_OPTS	+= --bps=$(DIABOLO_BPS)		# From sources
endif

.PHONY: erase
erase:
	diabolo.py $(DIABOLO_OPTS)	\
		--erase-flash

.PHONY: install
install: $(OUTDIR)/$(OUT).bin $(INC_DIABOLO) $(OUTDIR)/$(OUT).lst
	diabolo.py $(DIABOLO_OPTS)		\
		--burn-flash $<			\
		--cache=build/flash-cache.bin

.PHONY: diabolo
diabolo: $(INC_DIABOLO)
	diabolo.py $(DIABOLO_OPTS)

.PHONY: reset
reset:
	diabolo.py --reset


#  Diabolo's CRC of the generated binary
#
.PHONY: stat
stat:	$(OUTDIR)/$(OUT).bin
	@diabolo.py --mcu=$(DEVICE) --stat $(OUTDIR)/$(OUT).bin -q
