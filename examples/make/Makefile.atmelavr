#	-*- makefile -*-

ARCH		= avr-
MMCU		= -mmcu=$(MCU)

ODFLAGS		= -h -S

dasm:
	avr-objdump -m avr:5 -b binary -D build/out.bin


#	Device informations
#
#	HW_DEVICE is known to be valid at this stage
#
#	The file that has included the definition of HW_DEVICE will also provide
#	the other definitions we are looking for
#
$(OBJDIR)/$(OUT).hwa: $(SOURCES)
	@echo "Building $@"
	@mkdir -p $(OBJDIR)
	@rm -f $@
	@for f in $^ ; do				\
	  cat $$f >$$f.hwa.c				;\
	  echo 'HW_DEVICE_FLASH_SIZE' >>$$f.hwa.c	;\
	  echo 'HW_DEVICE_FUSE_EB' >>$$f.hwa.c		;\
	  echo 'HW_DEVICE_FUSE_HB' >>$$f.hwa.c		;\
	  echo 'HW_DEVICE_FUSE_LB' >>$$f.hwa.c		;\
          echo 'HW_DEVICE' >>$$f.hwa.c			;\
	  $(CC) $(CFLAGS) -E $$f.hwa.c >$@		;\
	  [ "$$HW_DEVICE" != "HW_DEVICE" ] && exit 0	;\
	done

#show-fuses:
show-fuses: $(OBJDIR)/$(OUT).hwa
	@[ -f $(OBJDIR)/$(OUT).hwa ] || exit 1
	@FUSE_EB=$$(tail -4 $(OBJDIR)/$(OUT).hwa | head -1 -)	;\
	FUSE_HB=$$(tail -3 $(OBJDIR)/$(OUT).hwa | head -1 -)	;\
	FUSE_LB=$$(tail -2 $(OBJDIR)/$(OUT).hwa | head -1 -)	;\
	if [ "$$FUSE_EB" != "HW_DEVICE_FUSE_EB" ] ; then	\
	    echo FUSE_EB=$$(printf "0x%02X" $$(($$FUSE_EB)))	;\
	fi							;\
	if [ "$$FUSE_HB" != "HW_DEVICE_FUSE_HB" ] ; then	\
	    echo FUSE_HB=$$(printf "0x%02X" $$(($$FUSE_HB)))	;\
	fi							;\
	if [ "$$FUSE_LB" != "HW_DEVICE_FUSE_LB" ] ; then	\
	    echo FUSE_LB=$$(printf "0x%02X" $$(($$FUSE_LB)))	;\
	fi

crc:	$(OBJDIR)/$(OUT).bin
	diabolo.py --mcu=$(MCU) --crc $(OBJDIR)/$(OUT).bin
