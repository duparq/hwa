#	-*- makefile -*-
#	-*- coding: utf-8 -*-

OPTIONS	= -v

ifeq (,$(PROG_HW))
$(error PROG_HW is not defined)
endif

#  Reset le microcontrôleur (permet de tester la liaison)
#
reset:
	avrdude -p $(PARTNO) -c $(PROG_HW) $(OPTIONS)

#  Efface le microcontrôleur
#
erase:
	avrdude -p $(PARTNO) -c $(PROG_HW) -e

#  Programme le microcontrôleur
#
# burn: $(OBJDIR)/$(OUT).hex
# 	avrdude -p $(PARTNO) -c $(PROG_HW) -y -e -U flash:w:$^
burn: $(OBJDIR)/$(OUT).bin
	avrdude -p $(PARTNO) -c $(PROG_HW) -y -e -U flash:w:$^

#  Vérifie la programmation
#
# verify: $(OBJDIR)/$(OUT).hex
# 	avrdude -p $(PARTNO) -c $(PROG_HW) -U flash:v:$^
verify: $(OBJDIR)/$(OUT).elf
	avrdude -p $(PARTNO) -c $(PROG_HW) -U flash:v:$^

#  Récupère le contenu de la flash
#
read-flash:
	avrdude -p $(PARTNO) -c $(PROG_HW)\
		-U flash:r:$(OBJDIR)/flash.bin:r

#  Récupère le contenu eeprom
#
read-eeprom:
	avrdude -p $(PARTNO) -c $(PROG_HW)\
		-U eeprom:r:$(OBJDIR)/eeprom.bin:r

#  Lit/programme les fusibles
#
read-fuses:
	avrdude -p $(PARTNO) -c $(PROG_HW) $(OPTIONS) \
		-U efuse:r:-:h		\
		-U hfuse:r:-:h		\
		-U lfuse:r:-:h		\
		-U lock:r:-:h		\
		-U calibration:r:-:h	\
		2>/dev/null >$(OBJDIR)/fuses.hex

write-fuses: $(OBJDIR)/$(OUT).hwa
	@FUSE_EB=$$(tail -4 $< | head -1 -)					;\
	FUSE_HB=$$(tail -3 $< | head -1 -)					;\
	FUSE_LB=$$(tail -2 $< | head -1 -)					;\
	FUSES=""								;\
	if [ "$$FUSE_EB" != "HW_DEVICE_FUSE_EB" ] ; then			\
	    FUSES=$$(printf " -U efuse:w:0x%02X:m " $$(($$FUSE_EB)))		;\
	fi									;\
	if [ "$$FUSE_HB" != "HW_DEVICE_FUSE_HB" ] ; then			\
	    FUSES=$${FUSES}$$(printf " -U hfuse:w:0x%02X:m" $$(($$FUSE_HB)))	;\
	fi									;\
	if [ "$$FUSE_LB" != "HW_DEVICE_FUSE_LB" ] ; then			\
	    FUSES=$${FUSES}$$(printf " -U lfuse:w:0x%02X:m" $$(($$FUSE_LB)))	;\
	fi									;\
	avrdude -p $(PARTNO) -c $(PROG_HW) $$FUSES

.PHONY:	reset erase burn verify read-flash read-eeprom read-fuses write-fuses
